# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Backend CI (Golang)

on:
  pull_request:
    branches: ["main"]
    paths:
      - backend/**
      - .github/workflows/backend-ci.yml
  workflow_dispatch: 

jobs:
  continuous-integration:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.x
      - name: Display Go version
        run: go version
      - name: Check Formatting
        run: gofmt -l . && test -z $(gofmt -l .)
      - name: Build
        run: go build -v ./...
      - name: Unit Tests
        run: go test -v ./...

  sast-bearer-owasp-top-10:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Bearer OWASP Top 10
        uses: bearer/bearer-action@v2
        with:
          path: 'backend'
          config-file: './bearer.yml'

  sast-trivy-repo-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Run Trivy
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'fs'
          scanners: 'vuln,secret,misconfig'
          severity: 'CRITICAL,HIGH'
          scan-ref: 'backend'
          exit-code: '1'
          format: 'table'
